
server.port=8080
spring.application.name=workflow-admin
org.springframework.boot.autoconfigure.EnableAutoConfiguration=com.hengtian.config.DruidConfiguration

# \u6570\u636E\u5E93
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://172.16.163.51:3307/activiti?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=lgb
spring.datasource.initialSize=5
spring.datasource.maxActive=100
spring.datasource.minIdle=10
spring.datasource.maxWait=60000
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=true
spring.datasource.testWhileIdle=true
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.removeAbandoned=true
spring.datasource.removeAbandonedTimeout=1800
spring.datasource.logAbandoned=true
spring.datasource.name = workflow
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource


pagehelper.helperDialect = mysql
pagehelper.reasonable = true
pagehelper.supportMethodsArguments = true
pagehelper.params = count=countSql
# Redis
# \u524D\u7F00
spring.redis.prefix=crm
# redis\u96C6\u7FA4\u8282\u70B9
spring.redis.nodes=172.16.163.60:7000,172.16.163.60:7001,172.16.163.61:7002,172.16.163.61:7003,172.16.163.62:7004,172.16.163.62:7005
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4
spring.redis.timeout=9000
# \u91CD\u8FDE\u6B21\u6570
spring.redis.maxAttempts=5
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570
spring.redis.maxTotal=100
# \u8FDE\u63A5\u6C60\u6700\u5927\u7A7A\u95F2\u6570
spring.redis.maxIdle=50
# \u8FDE\u63A5\u6C60\u6700\u5C0F\u7A7A\u95F2\u6570
spring.redis.minIdle=10
# \u6BCF\u6B21\u91CA\u653E\u8FDE\u63A5\u7684\u6700\u5927\u6570\u76EE
spring.redis.numTestsPerEvictionRun=1024
# \u91CA\u653E\u8FDE\u63A5\u7684\u626B\u63CF\u95F4\u9694(\u5355\u4F4D:\u6BEB\u79D2)
spring.redis.timeBetweenEvictionRunsMillis=30000
# \u8FDE\u63A5\u6700\u5C0F\u7A7A\u95F2\u65F6\u95F4(\u5355\u4F4D:\u6BEB\u79D2)
spring.redis.minEvictableIdleTimeMillis=100000
# \u8FDE\u63A5\u7A7A\u95F2\u591A\u4E45\u540E\u91CA\u653E,\u5F53\u7A7A\u95F2\u65F6\u95F4\u5927\u4E8E\u8BE5\u503C\u5E76\u4E14\u7A7A\u95F2\u8FDE\u63A5\u5927\u4E8E\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5\u65F6\u76F4\u63A5\u91CA\u653E\u8FDE\u63A5
spring.redis.softMinEvictableIdleTimeMillis=10000
# \u83B7\u53D6\u8FDE\u63A5\u65F6\u6700\u5927\u7B49\u5F85\u6BEB\u79D2\u6570,\u5982\u679C\u8BE5\u503C\u5C0F\u4E8E0,\u5219\u963B\u585E\u4E0D\u786E\u5B9A\u7684\u65F6\u957F,\u9ED8\u8BA4\u503C-1
spring.redis.maxWaitMillis=60000
# \u5728\u83B7\u53D6\u8FDE\u63A5\u65F6\u68C0\u67E5\u8FDE\u63A5\u6709\u6548\u6027,\u9ED8\u8BA4\u4E3Afalse
spring.redis.testOnBorrow=false
# \u5728\u8FDE\u63A5\u7A7A\u95F2\u65F6\u68C0\u67E5\u8FDE\u63A5\u6709\u6548\u6027,\u9ED8\u8BA4\u4E3Afalse
spring.redis.testWhileIdle=true
# \u8FDE\u63A5\u8017\u5C3D\u662F\u5426\u963B\u585E,false\u4EE3\u8868\u629B\u5F02\u5E38,true\u4EE3\u8868\u963B\u585E\u76F4\u5230\u8D85\u65F6,\u9ED8\u8BA4\u4E3Atrue
spring.redis.blockWhenExhausted=false

# \u90AE\u4EF6\u914D\u7F6E
email.send.host=smtp.chtwm.com
email.send.port=25
email.send.auth=true
email.send.account=zabbix@chtwm.com
email.send.password=htcf.123.qwe
email.smtp.debug=true

domain-maps={chtwm:"chtwm.com"}

# activiti
activiti.database.schema.update=true
activiti.mail.server.host=smtp.163.com
activiti.mail.server.port=25
activiti.mail.server.default.from=13601094934@163.com
activiti.mail.server.username=13601094934@163.com
activiti.mail.server.password=ma577415138
activiti.mail.server.use.SSL=true
activiti.activity.font.name=\u5B8B\u4F53
activiti.label.font.name=\u5B8B\u4F53
activiti.annotation.font.name=\u5B8B\u4F53

# dubbo
dubbo.application.name=workflow-admin
#dubbo.registry.address=172.16.163.60:2181,172.16.163.61:2181,172.16.163.62:2181
dubbo.registry.id = zookeeper-registry
#dubbo.registry.address = zookeeper://127.0.0.1:2181
dubbo.registry.address = zookeeper://172.16.163.51:2181
#dubbo.registry.address = zookeeper://172.16.163.60:2181?backup=172.16.163.61:2181,172.16.163.62:2181
## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.status = client
## ConsumerConfig Bean
dubbo.consumer.timeout = 60000
dubbo.consumer.version = 1.0.0
dubbo.consumer.retries = 0

# \u8BBE\u7F6Esession\u8D85\u65F6\u65F6\u95F4
server.servlet.session.timeout=30m
# \u8BBE\u7F6E\u7F16\u7801\u683C\u5F0F
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true

# mybatis
mybatis.mapper-locations = classpath:com.hengtian.**/*.xml
mybatis.type-aliases-package = com.hengtian

security.basic.enabled=false